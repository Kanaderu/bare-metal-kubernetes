---

- name: Create namespace
  kubernetes.core.k8s:
    api_version: v1
    kind: Namespace
    name: "{{ ipa_namespace }}"
    state: present

# TODO: test for PVC before deploying it again
# - name: Test for PVC
#   ansible.builtin.command:
#     cmd: kubectl -n {{ ipa_namespace }}

- name: Deploy IPA PVC
  kubernetes.core.k8s:
    state: present
    template: 'freeipa-pvc.yaml.j2'

- name: Deploy IPA Load Balancer
  kubernetes.core.k8s:
    state: present
    template: 'freeipa-lb.yaml.j2'

- name: Deploy IPA Service
  kubernetes.core.k8s:
    state: present
    template: 'freeipa-svc.yaml.j2'

- name: Get IP of FreeIPA LoadBalancer
  ansible.builtin.command:
    cmd: kubectl -n freeipa get svc freeipa-lb -o jsonpath='{.status.loadBalancer.ingress[].ip}'
  register: _ipa_svc_ip

- name: Set FreeIPA public IP address
  ansible.builtin.set_fact:
    ipa_public_ip: "{{ _ipa_svc_ip.stdout }}"

- name: Create IPA Secrets
  kubernetes.core.k8s:
    state: present
    template: 'freeipa-secret.yaml.j2'

- name: Deploy IPA StatefulSet
  kubernetes.core.k8s:
    state: present
    template: 'freeipa-statefulset.yaml.j2'

#
# TODO:
#   - Pause while IPA is configured
#   - Disable anonymous bind
#
# - name: Pause play until IPA is up
#   ansible.builtin.uri:
#     url: "https://{{ ipa_hostname }}"
#     method: GET
#   register: _ipa_result
#   until: _ipa_result.status == 200
#   retries: 180 # 30 minutes
#   delay: 10 # seconds

# # ldapmodify -x -D "" -W -h server.example.com -p 389 -ZZ -f files/anon-read.ldif
# - name: Remove anonymous LDAP access
#   community.general.ldap_entry:
#     dn: cn=config
#     state: present
#     server_uri: ldap://{{ ipa_hostname }}/
#     bind_dn: cn=Directory Manager
#     bind_pw: "{{ ipa_directory_password }}"
#     validate_certs: false
#     olcAccess:
#       - >-
#         changetype: modify
#         replace: nsslapd-allow-anonymous-access
#         nsslapd-allow-anonymous-access: rootdse

...
