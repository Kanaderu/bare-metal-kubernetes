apiVersion: kubeadm.k8s.io/v1beta3
kind: InitConfiguration
bootstrapTokens:
- groups:
  - system:bootstrappers:kubeadm:default-node-token
  token: 3ysvc3.2bvndl13jv91l4vv
  ttl: 24h0m0s
  usages:
  - signing
  - authentication
# localAPIEndpoint:
#   advertiseAddress: {{ k8s_controller }}
#   bindPort: 6443
nodeRegistration:
  criSocket: unix:///run/crio/crio.sock
  imagePullPolicy: IfNotPresent
  name: {{ k8s_controller }}
  taints:
  - effect: NoSchedule
    key: node-role.kubernetes.io/control-plane
---
apiVersion: kubeadm.k8s.io/v1beta3
kind: ClusterConfiguration
kubernetesVersion: v{{ kubernetes_version }}
#controlPlaneEndpoint: {{ k8s_controller_lb }}
certificatesDir: /etc/kubernetes/pki
clusterName: {{ k8s_cluster_name }}
controllerManager:
  extraArgs:
    node-cidr-mask-size-ipv4: "24"
    node-cidr-mask-size-ipv6: "112"
dns: {}
scheduler: {}
apiServer:
  extraArgs:
    endpoint-reconciler-type: lease
    advertise-address: {{ ansible_default_ipv4.address }}
    bind-address: 0.0.0.0
    feature-gates: EphemeralContainers=true,OpenAPIV3=true
  timeoutForControlPlane: 4m0s
etcd:
  local:
    dataDir: /var/lib/etcd
    imageTag: {{ etcd_version }}
imageRepository: registry.k8s.io
networking:
  dnsDomain: cluster.local
  podSubnet: {{ k8s_pod_network.ipv4 }},{{ k8s_pod_network.ipv6 }}
  serviceSubnet: {{ k8s_service_network.ipv4 }},{{ k8s_service_network.ipv6 }}
---
kind: KubeletConfiguration
apiVersion: kubelet.config.k8s.io/v1beta1
cgroupDriver: systemd
featureGates:
  EphemeralContainers: true